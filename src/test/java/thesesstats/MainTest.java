/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package thesesstats;

import org.testng.*;
import org.testng.annotations.*;

import java.io.*;

public class MainTest {
    private static interface Action {
        void run() throws IOException;
    }

    private static File createResultFile(final File parent, final int points, final String grade) throws IOException {
        final File result = new File(parent.getAbsolutePath(), "result.txt");
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(result))) {
            writer.write(Integer.toString(points));
            writer.newLine();
            writer.write(grade);
            writer.newLine();
        }
        return result;
    }

    private static Action prepareTestData(final File root) throws IOException {
        final File first = new File(root.getAbsolutePath(), "Erstgutachten");
        first.mkdir();
        final File second = new File(root.getAbsolutePath(), "Zweitgutachten");
        second.mkdir();
        final File statisticsAll = new File(root.getAbsolutePath(), "Statistik");
        statisticsAll.mkdir();
        final File firstBA = new File(first.getAbsolutePath(), "Bachelor");
        firstBA.mkdir();
        final File firstMA = new File(first.getAbsolutePath(), "Master");
        firstMA.mkdir();
        final File firstPA = new File(first.getAbsolutePath(), "Praxisarbeiten");
        firstPA.mkdir();
        final File firstStatistics = new File(first.getAbsolutePath(), "Statistik");
        firstStatistics.mkdir();
        final File secondBA = new File(second.getAbsolutePath(), "Bachelor");
        secondBA.mkdir();
        final File secondMA = new File(second.getAbsolutePath(), "Master");
        secondMA.mkdir();
        final File secondPA = new File(second.getAbsolutePath(), "Praxisarbeiten");
        secondPA.mkdir();
        final File secondStatistics = new File(second.getAbsolutePath(), "Statistik");
        secondStatistics.mkdir();
        final File firstBA1 = new File(firstBA.getAbsolutePath(), "2023P1");
        firstBA1.mkdir();
        final File firstBA2 = new File(firstBA.getAbsolutePath(), "2023P2");
        firstBA2.mkdir();
        final File firstBA1R = MainTest.createResultFile(firstBA1, 50, "4,0");
        final File firstBA2R = MainTest.createResultFile(firstBA2, 92, "1,3");
        return new Action() {
            @Override
            public void run() throws IOException {
                firstBA1R.delete();
                firstBA2R.delete();
                firstBA1.delete();
                firstBA2.delete();
                firstBA.delete();
                firstMA.delete();
                firstPA.delete();
                firstStatistics.delete();
                secondBA.delete();
                secondMA.delete();
                secondPA.delete();
                secondStatistics.delete();
                first.delete();
                second.delete();
                statisticsAll.delete();
            }
        };
    }

    @Test
    public void mainTest() throws IOException {
        final File locateTmp = File.createTempFile("locate", "tmp");
        final File testDir = new File(locateTmp.getParentFile().getAbsolutePath(), "thesesstats");
        testDir.mkdir();
        final Action tidyUp = MainTest.prepareTestData(testDir);
        Main.main(new String[] {testDir.getAbsolutePath(), "2023"});
        final StringBuilder result = new StringBuilder();
        try (
            BufferedReader reader =
                new BufferedReader(
                    new FileReader(
                        testDir
                        .toPath()
                        .resolve("Statistik")
                        .resolve("statisticsFirstALL2023.tex")
                        .toFile()
                    )
                )
        ) {
            String line = reader.readLine();
            while (line != null) {
                result.append(line);
                result.append("\n");
                line = reader.readLine();
            }
        }
        Assert.assertEquals(
            result.toString(),
            "\\documentclass[12pt]{article}\n\n"
            + "\\usepackage[a4paper,landscape,margin=1cm]{geometry}\n"
            + "\\usepackage{pgfplots}\n\n"
            + "\\pagestyle{empty}\n\n"
            + "\\begin{document}\n\n"
            + "\\pgfplotstableread[row sep=\\\\,col sep=&]{\n"
            + "    grade & number \\\\\n"
            + "    1.0   & 0 \\\\\n"
            + "    1.3   & 1 \\\\\n"
            + "    1.7   & 0 \\\\\n"
            + "    2.0   & 0 \\\\\n"
            + "    2.3   & 0 \\\\\n"
            + "    2.7   & 0 \\\\\n"
            + "    3.0   & 0 \\\\\n"
            + "    3.3   & 0 \\\\\n"
            + "    3.7   & 0 \\\\\n"
            + "    4.0   & 1 \\\\\n"
            + "    5.0   & 0 \\\\\n"
            + "    }\\mydata\n\n"
            + "\\vspace*{2cm}\n\n"
            + "\\begin{center}\n\n"
            + "{\\Huge \\textbf{Notenspiegel Abschluss- und Praxisarbeiten mit Erstbetreuer Str√∂der 2023}}\n\n"
            + "\\vspace*{1cm}\n\n"
            + "{\\large\n"
            + "\\begin{tikzpicture}\n"
            + "    \\begin{axis}[\n"
            + "            ybar,\n"
            + "            bar width=.5cm,\n"
            + "            width=0.8\\paperwidth,\n"
            + "            height=0.5\\paperheight,\n"
            + "            legend style={at={(0.5,1)},\n"
            + "                anchor=north,legend columns=-1},\n"
            + "            symbolic x coords={1.0,1.3,1.7,2.0,2.3,2.7,3.0,3.3,3.7,4.0,5.0},\n"
            + "            xtick=data,\n"
            + "            nodes near coords,\n"
            + "            nodes near coords align={vertical},\n"
            + "            ymin=0,ymax=6,\n"
            + "            ylabel={Anzahl},\n"
            + "            x label style={at={(axis description cs:0.5,-0.05)},anchor=north},\n"
            + "            xlabel={Note}\n"
            + "        ]\n"
            + "        \\addplot table[x=grade,y=number]{\\mydata};\n"
            + "    \\end{axis}\n"
            + "\\end{tikzpicture}\n"
            + "}\n\n"
            + "\\vspace*{8mm}\n\n"
            + "Notendurchschnitt: 2,7\n\n"
            + "\\end{center}\n\n"
            + "\\end{document}\n"
        );
        tidyUp.run();
        testDir.delete();
        locateTmp.delete();
    }
}
